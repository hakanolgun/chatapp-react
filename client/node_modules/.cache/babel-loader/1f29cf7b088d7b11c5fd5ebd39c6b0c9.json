{"ast":null,"code":"var _jsxFileName = \"/home/hakan/patika/react-chatapp/client/src/context/ChatContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext();\nexport const ChatProvider = ({\n  children\n}) => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const values = {\n    messages,\n    setMessages\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ChatProvider, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n\n_c = ChatProvider;\nexport const useChat = () => {\n  _s2();\n\n  return useContext(ChatContext);\n};\n\n_s2(useChat, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"sources":["/home/hakan/patika/react-chatapp/client/src/context/ChatContext.js"],"names":["createContext","useContext","useState","ChatContext","ChatProvider","children","messages","setMessages","values","useChat"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEA,OAAO,MAAMI,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMM,MAAM,GAAG;AACbF,IAAAA,QADa;AAEbC,IAAAA;AAFa,GAAf;AAKA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,MAA7B;AAAA,cAAsCH;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CATM;;GAAMD,Y;;KAAAA,Y;AAWb,OAAO,MAAMK,OAAO,GAAG;AAAA;;AAAA,SAAMR,UAAU,CAACE,WAAD,CAAhB;AAAA,CAAhB;;IAAMM,O","sourcesContent":["import { createContext, useContext, useState } from \"react\";\n\nconst ChatContext = createContext();\n\nexport const ChatProvider = ({ children }) => {\n  const [messages, setMessages] = useState([]);\n\n  const values = {\n    messages,\n    setMessages,\n  };\n\n  return <ChatContext.Provider value={values}>{children}</ChatContext.Provider>;\n};\n\nexport const useChat = () => useContext(ChatContext);\n"]},"metadata":{},"sourceType":"module"}